{"version":3,"sources":["store/clubs.ts","components/Start.tsx","store/index.ts","components/FilterButtons.tsx","components/ClubsList.tsx","components/Clubs.tsx","App.tsx","helpers/api.ts","index.tsx"],"names":["clubReducer","clubs","action","type","Start","className","to","pathname","getClubs","state","rootReducer","combineReducers","store","createStore","FilterButtons","filters","callback","map","item","key","onClick","ClubsList","list","link","href","src","logo","alt","title_short","title","Clubs","useSelector","useState","filterState","setfilterState","activityState","setactivityState","cityState","setcityState","tabs","useCallback","city","Set","citiesFilter","useEffect","visibleClubs","useMemo","filter","includes","activity","find","value","Boolean","filtersActivity","result","reduce","prev","concat","activityFilter","getAppData","a","fetch","then","response","json","dataFromServer","App","dispatch","useDispatch","path","exact","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24f3c39f.chunk.js","sourcesContent":["import { Action } from 'redux';\n\nconst INIT_CLUB = 'INIT_CLUB';\n\ntype InitClubAction = Action<typeof INIT_CLUB> & {\n  clubs: Club[];\n};\n\nexport const initClub = (clubs: Club[]): InitClubAction => ({\n  type: INIT_CLUB,\n  clubs,\n});\n\ntype AlowwedActions = InitClubAction;\n\nconst clubReducer = (clubs: Club[] = [], action: AlowwedActions): Club[] => {\n  switch (action.type) {\n    case INIT_CLUB:\n      return action.clubs;\n    default:\n      return clubs;\n  }\n};\n\nexport default clubReducer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Start = () => {\n  return (\n    <div className=\"start\">\n      <Link className=\"start__link\"\n        to={{\n          pathname: \"/clubs\",\n        }}\n      >\n      Выбрать клуб\n    </Link>\n    </div>\n  );\n}\n\nexport default Start;","import { createStore, combineReducers } from 'redux';\nimport clubReducer from './clubs';\n\n\nexport const getClubs = (state: RootState) => state.clubs\n\n\nconst rootReducer = combineReducers({\n  clubs: clubReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\n// import cn from 'classnames';\n\ntype Props = {\n  filters: string[];\n  callback: (value: string) => void;\n  type: string;\n}\n\nconst FilterButtons: React.FC<Props> = ({ filters, callback, type }) => {\n  return (\n    <div className={type}>\n      {\n      filters.map(item => (\n        <button\n          className=\"button\"\n          type=\"button\"\n          key={item}\n          onClick={() => callback(item)}\n        >\n          {item}\n        </button>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default FilterButtons;","import React from 'react';\n\ntype Props = {\n  list: Club[];\n}\n\nexport const ClubsList: React.FC<Props> = ({ list }) => {\n  return (\n    <ul>\n      {\n        list.map(item => (\n          <li key={item.link}>\n            <a href={item.link}>\n              <img src={item.logo} alt={item.title_short}/>\n              <h3>{item.title}</h3>\n            </a>\n          </li>\n        ))\n      }\n    </ul>\n  )\n}","import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getClubs } from '../store';\nimport FilterButtons from './FilterButtons';\nimport { ClubsList } from './ClubsList';\n\nconst Clubs = () => {\n  const clubs = useSelector(getClubs);\n\n  const [filterState, setfilterState] = useState<string>('');\n  const [activityState, setactivityState] = useState<string>('');\n  const [cityState, setcityState] = useState<string[]>([]);\n\n  const citiesFilter = () => {\n    const filters:string[] = clubs.map(item => item.city.title);\n\n    // @ts-ignore\n    setcityState([...new Set<string[]>(filters)]);\n  }\n\n  const activityFilter = () => {\n    const filters:Activity[][] = visibleClubs.map(item => item.activity);\n\n    const filtered = filters.reduce((prev, item) => {\n      return prev.concat(item);\n    }, []);\n\n    const result = filtered.map(item => item.title)\n\n    // @ts-ignore\n    return [...new Set<string[]>(result)]\n  }\n\n  const changefilterState = (value: string) => {\n    if ( value === filterState) {\n      setfilterState('');\n      return;\n    }\n\n    setfilterState(value);\n  }\n\n  const changeActivity = (value: string) => {\n    if ( value === activityState) {\n      setactivityState('');\n      return;\n    }\n\n    setactivityState(value);\n  }\n\n  const resetFilters = () => {\n    setactivityState('');\n    setfilterState('');\n  }\n\n  const tabs = useCallback(() => {\n    return citiesFilter();\n  }, [clubs])\n\n  useEffect(() => {\n    tabs();\n  }, [tabs])\n\n  const visibleClubs = useMemo(() => {\n    return clubs.filter(\n      item => (\n        item.city.title.includes(filterState)\n        && item.activity.find((value => Boolean(value.title.includes(activityState))))\n      )\n    );\n  }, [clubs, filterState, activityState])\n\n  const filtersActivity = useMemo(() => {\n    return activityFilter();\n  }, [visibleClubs]);\n\n  return (\n    <>\n      <h1>Выбрать клуб по городу или направлению</h1>\n      <div className=\"app\">\n      <button\n      className=\"button\"\n      type=\"button\"\n      onClick={resetFilters}\n      >\n        Показать все клубы и направления\n      </button>\n\n      <h2>Города:</h2>\n      <FilterButtons\n        filters={cityState}\n        callback={changefilterState}\n        type=\"city\"\n      />\n\n      <h2>Направления:</h2>\n      <FilterButtons\n        filters={filtersActivity}\n        callback={changeActivity}\n        type=\"activity\"\n      />\n\n      <ClubsList\n        list={visibleClubs}\n      />\n    </div>\n    </>\n  );\n};\n\nexport default Clubs","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch, Redirect, Route } from 'react-router-dom';\n\nimport * as api from './helpers/api';\nimport { initClub } from './store/clubs';\n\nimport './App.css';\nimport Start from './components/Start';\nimport Clubs from './components/Clubs';\n\n\nconst getAppData = async (): Promise<Club[]> => {\n  const dataFromServer = await api.getDataFromServer();\n\n  return dataFromServer;\n};\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const setClubs = () => {\n    getAppData()\n      .then(dataFromServer => {\n        dispatch(initClub(dataFromServer));\n      })\n  };\n\n  useEffect (() => {\n    setClubs();\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Switch>\n        <Route path=\"/\" exact>\n            <Start />\n        </Route>\n        <Route path=\"/clubs\">\n            <Clubs />\n        </Route>\n          <Redirect from=\"/home\" to=\"/\" />\n        </Switch>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n","const API_URL = 'https://instasport.co/dashboard/api/v1/clubs/?format=json'\n\nexport const getDataFromServer = () => {\n  return fetch(API_URL)\n    .then(response => response.json());\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}